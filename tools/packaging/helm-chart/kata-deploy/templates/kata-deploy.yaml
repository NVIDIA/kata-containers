apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kata-deploy
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      name: kata-deploy
  template:
    metadata:
      labels:
        name: kata-deploy
    spec:
{{- with .Values.kataDeploy.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.kataDeploy.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 6 }}
{{- end }}
      containers:
      - command:
        - bash
        - -c
        - /opt/kata-artifacts/scripts/kata-deploy.sh install
        env:
        - name: DEBUG
          value: '{{ .Values.kataDeploy.debug }}'
        - name: DEFAULT_SHIM
          value: '{{ .Values.kataDeploy.defaultShim }}'
        - name: CREATE_RUNTIMECLASSES
          value: '{{ .Values.kataDeploy.createRuntimeClasses }}'
        - name: CREATE_DEFAULT_RUNTIMECLASS
          value: '{{ .Values.kataDeploy.createDefaultRuntimeClass }}'
        - name: ALLOWED_HYPERVISOR_ANNOTATIONS
          value: '{{ .Values.kataDeploy.allowedHypervisorAnnotations }}'
        - name: CONTAINERD_DROP_IN_CONF
          value: '{{ .Values.kataDeploy.containerdDropInConf }}'
        - name: SHIMS
          value: '{{ .Values.kataDeploy.shims }}'
        - name: INSTALL_PREFIX
          value: '{{ .Values.kataDeploy.installPrefix }}'
        - name: SETUP_GPU_FEATURE_DISCOVERY
          value: '{{ .Values.kataGpuFeatureDiscovery.enabled }}'
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: SNAPSHOTTER_HANDLER_MAPPING
          value: ""
        - name: AGENT_HTTPS_PROXY
          value: ""
        - name: AGENT_NO_PROXY
          value: ""
        image: '{{ .Values.kataDeploy.repository }}:{{ .Values.kataDeploy.version }}'
        imagePullPolicy: '{{ .Values.kataDeploy.imagePullPolicy }}'
        {{- if .Values.kataDeploy.cleanupOnExit }}
        lifecycle:
          preStop:
            exec:
              command:
              - bash
              - -c
              - /opt/kata-artifacts/scripts/kata-deploy.sh node-cleanup
        {{- end }}
        name: kube-kata
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/crio/
          name: crio-conf
        - mountPath: /etc/containerd/
          name: containerd-conf
        - mountPath: /opt/kata/
          name: kata-artifacts
        - mountPath: /usr/local/bin/
          name: local-bin
{{- with .Values.kataDeploy.kataOps }}
      - command:
        - bash
        - -c
        - sleep infinity
        env:
        - name: JOURNAL_DIR
          value: /host-journal
        image: '{{ .repository }}:{{ .version }}'
        name: kata-ops
        volumeMounts:
        - mountPath: /host-journal
          name: journal
{{- end }}
      hostPID: true
      serviceAccountName: kata-deploy-sa
      volumes:
      - hostPath:
          path: '{{- template "kataDeploy.containerdConfPath" .Values.kataDeploy }}'
        name: containerd-conf
      - hostPath:
          path: /etc/crio/
        name: crio-conf
      - hostPath:
          path: /opt/kata/
          type: DirectoryOrCreate
        name: kata-artifacts
      - hostPath:
          path: /usr/local/bin/
        name: local-bin
      - hostPath:
          path: /var/log/journal/
          type: ""
        name: journal
{{- with .Values.kataDeploy.updateStrategy }}
  updateStrategy:
{{- toYaml . | nindent 4 }}
{{- end }}
