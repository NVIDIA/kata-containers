{{- if .Values.kataGpuFeatureDiscovery.enabled -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kata-gpu-feature-discovery
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kata-gpu-feature-discovery
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kata-gpu-feature-discovery
    spec:
      runtimeClassName: kata-qemu-nvidia-gpu
      nodeSelector:
        katacontainers.io/gpu-feature-discovery: required
{{- with .Values.kataGpuFeatureDiscovery.extraNodeLabels }}
{{- toYaml . | nindent 8 }}
{{- end }}
{{- with .Values.kataDeploy.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 6 }}
{{- end }}
      initContainers:
        - image: nvcr.io/nvidia/k8s-device-plugin:v0.17.0
          name: gpu-feature-discovery
          command: ["/usr/bin/gpu-feature-discovery"]
          resources:
            requests:
              "nvidia.com/pgpu": 1
            limits:
              "nvidia.com/pgpu": 1
              memory: "8G"
          volumeMounts:
            - name: output-dir
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d"
            - name: host-sys
              mountPath: "/sys"
          securityContext:
            privileged: true
          env:
            - name: MIG_STRATEGY
              value: none
            - name: GFD_ONESHOT
              value: "true"
      containers:
        - command:
          - /bin/bash
          - -c
          - |
            GPU_COUNT=$(kubectl get nodes "$NODE_NAME" -o=jsonpath='{.status.allocatable.nvidia\.com/pgpu}')
            sed -i "s/gpu\.count=1/gpu\.count=$GPU_COUNT/g" /etc/kubernetes/node-feature-discovery/features.d/gfd
            kubectl label node --overwrite "$NODE_NAME" katacontainers.io/gpu-feature-discovery=completed
          volumeMounts:
            - name: output-dir
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d"
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: '{{ .Values.kataDeploy.repository }}:{{ .Values.kataDeploy.version }}'
          imagePullPolicy: '{{ .Values.kataDeploy.imagePullPolicy }}'
          name: post-process
          volumeMounts:
            - name: output-dir
              mountPath: "/etc/kubernetes/node-feature-discovery/features.d"
          resources:
            limits:
              memory: "8G"
      serviceAccountName: kata-deploy-sa
      volumes:
        - name: output-dir
          hostPath:
            path: "/etc/kubernetes/node-feature-discovery/features.d"
        - name: host-sys
          hostPath:
            path: "/sys"
{{- end -}}
